openapi: 3.0.3
info:
  title: API - CITIBAR
  description: ''
  version: 1.0.0
servers:
  - url: https://citibar.com.br/api
tags:
  - name: auth
    description: Routes for authentication
  - name: products
    description: Routes for products
security:
  - bearerAuth: []
paths:
  /register:
    post:
      tags:
        - auth
      summary: Register user
      description: Register user
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Jhon Doe'
                email:
                  type: string
                  example: 'jhondoe@example.com'
                password:
                  type: string
                  example: '123456'
                password_confirmation:
                  type: string
                  example: '123456'
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'User created successfully'
        '400':
          description: Error creating user
  /login:
    post:
      tags:
        - auth
      summary: Login user
      description: Login user
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Jhon Doe'
                email:
                  type: string
                  example: 'jhondoe@example.com'
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Jhon Doe'
                      email:
                        type: string
                        example: 'jhondoe@example.com'
                      phone:
                        type: string
                        example: '(79) 98671-2834'
                      email_verified_at:
                        type: string
                        example: '2024-03-01T17:36:58.000000Z'
                      created_at:
                        type: string
                        example: '2024-03-01T17:36:58.000000Z'
                      updated_at:
                        type: string
                        example: '2024-03-01T17:36:58.000000Z'
                  token:
                    type: string
                    example: '1|Ehl59HM1l00XoIDfNCv7pmsvLWMRjKiv25fPkAA1a26b6c45'
        '400':
          description: Error logging in user

  /products:
    get:
      tags:
        - products
      summary: List products
      description: List products
      operationId: index
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    products:
                      type: array
                      items:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          data:
                            type: array
                            items:
                              type: object
                              properties:
                                  id:
                                    type: integer
                                    example: 1
                                  name:
                                    type: string
                                    example: 'Product 1'
                                  description:
                                    type: string
                                    example: 'Description of product 1'
                                  status:
                                    type: number
                                    example: 1
                                  price:
                                    type: number
                                    example: 100
                                  user_id:
                                    type: integer
                                    example: 1
                                  created_at:
                                    type: string
                                    example: '2024-03-01T17:36:58.000000Z'
                                  updated_at:
                                    type: string
                                    example: '2024-03-01T17:36:58.000000Z'
                                  categories:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        id:
                                          type: integer
                                          example: 1
                                        name:
                                          type: string
                                          example: 'Category 1'
                                        created_at:
                                          type: string
                                          example: '2024-03-01T17:36:58.000000Z'
                                        updated_at:
                                          type: string
                                          example: '2024-03-01T17:36:58.000000Z'
                          first_page_url:
                            type: string
                            example: 'http://citibar.com.br/api/products?page=1'
                          from:
                            type: number
                            example: 1
                          last_page:
                            type: number
                            example: 1
                          last_page_url:
                            type: string
                            example: 'http://citibar.com.br/api/products?page=1'
                          next_page_url:
                            type: string
                            example: null
                          path:
                            type: string
                            example: 'http://citibar.com.br/api/products'
                          per_page:
                            type: number
                            example: 10
                          prev_page_url:
                            type: string
                            example: null
                          to:
                            type: number
                            example: 5
                          total:
                            type: number
                            example: 5


        '400':
          description: Erro ao listar produtos
    post:
        tags:
            - products
        summary: Create product
        description: Create product
        operationId: create
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: 'Product 1'
                  description:
                    type: string
                    example: 'Description of product 1'
                  price:
                    type: number
                    example: 100
                  categories:
                    type: array
                    items:
                      type: integer
                      example: 1
        responses:
          '200':
            description: Product created successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: 'Product created successfully'
          '400':
            description: Error creating product
  /products/{id}:
    put:
      tags:
        - products
      summary: Update product
      description: Update product
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          description: ID of product
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Product 1'
                description:
                  type: string
                  example: 'Description of product 1'
                price:
                  type: number
                  example: 100
                categories:
                  type: array
                  items:
                    type: integer
                    example: 1
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Product updated successfully'
        '400':
          description: Error updating product
        '401':
          $ref: '#/components/responses/UnauthorizedError'

components:
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
